<Git merge>
1. Merge commit: 서로 다른 버전을 합쳐 새로운 커밋 생성
2. Fast-forward: 기존 버전에서 차이가 있는 부분에 대해서만 병합 -> 나중 버전으로 커밋 생성
3. Conflict: 두 가지 버전 중 차이가 나는 부분이 존재하여 충돌이 나는 상황

- merge: 두 branch를 합치는 명령어
 1. 현재 test/create_branch에서의 작업 완료
 2. 해당 branch를 master branch에 합치는 과정 필요
 3. master branch로 merge 후 test/create_branch 삭제 가능

- 2개의 커밋을 병합
 1. 2개의 커밋을 병합커밋으로 만들어 master branch에 올릴 수 있음

- 빨리 감기 병합: Fast-forward merge
 1. Sourcetree에서 master branch로 checkout: $ git checkout master
 2. 병합을 원하는 커밋에서 병합 메뉴 선택
    > branch 메뉴에서 직접 현재 브랜치로 test/create_branch 병합 메뉴 선택 가능
 3. Sourcetree의 History에 Merge Branch 'test/create_branch' 항목이 추가
 4. 빨리 감기 병합 완료
 5. 로컬 저장소에서의 병합이 완료된 후 push를 통해 원격 저장소에서도 병합 진행

- error: failed to push some refs to '~~'
 1. 로컬 저장소로 $ git pull origin master 진행
 2. 이후 $ git push origin master 진행
    > 따로 $ git add / $ git commit 필요하지 않음

- 병합 커밋 & Conflict 해결
 1. merge 도중 코드가 깨질 수 있기에 자신의 전용 branch에 선 병합 진행
    > 같은 커밋을 기준으로 각자 같은 코드를 다르게 수정한다면 충돌 발생
 2. master branch에서 자신의 전용 branch로 checkout: $ git checkout 'git branch'
 3. 병합하기 원하는 branch를 우클릭하여 병합 진행
 4. 충돌 병합 창 발생
 5. 커밋하지 않은 변경사항 클릭 후 우측 하단의 스테이지에서 충돌난 부분 확인 가능
    > VScode를 사용하여 수정 진행
        + <<<<<<< HEAD
          [현재 branch에서 수정한 내용]
          ======
          [병합 대상 branch에서 수정한 내용]
          >>>>>>> master
    > 충돌 부분 확인 후 수정
 6. 수정 이후 Sourcetree의 스테이지에서 충돌 부분이 사라진 것 확인 가능
 7. 병합 재개
    > Sourcetree에서 커밋 클릭
    > 병합 커밋 시 메시지에 병합 메시지에 대한 영문 텍스트 자동 삽입: 충돌이 났다는 알림
    > 이미 수정 이후의 상황으로 해당 메시지의 수정 혹은 제거해도 무방
    > 커밋 진행
 8. push 진행
 9. 자신의 전용 branch에서 Conflict를 해결했기에 master branch에 병합 커밋 반영
    > master branch로 checkout
    > 전용 branch를 우클릭하여 병합 진행
    > push를 통해 원격 저장소에도 반영

- Pull Request
 1. 협력자, 같이 일하는 동료에게 Branch의 병합을 요청하는 메시지를 보내는 것
 2. 병합 전 수정 내용에 대해 다른 사용자에게 알림하는 서비스
 3. 실습
    > 새로운 branch 생성: test/comment
    > 기존 branch에서 test-comment.txt 파일 생성 후 test/comment branch로 커밋 진행
    > 생성한 파일을 스테이지에 올리기: $ git add 'test-comment.txt'
    > Sourcetree 최하단의 -에 바뀐 내용 즉시 푸시 체크
    > 커밋 진행
    > Github 접속 시 상단에 test/comment had recent pushes less than a minute aga - Compare & pull request 문구 확인 가능
        + 해당 알림을 통해 본인 이외의 사용자에게 어떠한 부분이 수정되어 commit 되었는지 알림 발송 가능
    > 메시지를 적을 수 있는 창이 뜨며 base branch와 Compare branch의 설정이 필요
        + 변경 내용이 올라가야할 branch = base branch
        + 현재 기준이 되는 branch = Compare branch
    > pull request를 진행하게 된다면 Github의 pull request 메뉴에 숫자 표시
        + Merge pull request를 통해 댓글을 달고 병합 진행
    > merge가 완료된다면 Pull request successfully merged and closed 확인 가능
        + 다시 pull request 메뉴로 들어가면 숫자가 사라지고 1 Closed로 변경된 것 확인 가능
    > Sourcetree에서는 아직 변경 사항이 적용되지 않았기에 패치를 통해 원격 저장소와 동일하게 생성
    > 패치 이후 master branch로 checkout하고 pull을 통해 원격 저장소의 내용과 로컬 저장소의 내용을 동일하게 맞추는 작업 진행