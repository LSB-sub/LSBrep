<로컬 저장소를 불러오는 방법>
 Clone: 원격 저장소를 내 컴퓨터로 받아오고 소스트리에도 추가 - 로컬 저장소 자동 생성
 Add: 로컬에 미리 만들어놓을 로컬 저장소를 소스트리에 추가
 Create: 로컬에 새로운 로컬 저장소 생성 = $ git init

<로컬 저장소를 소스트리에 불러오기>
1. Add -> 탐색 을 통해 컴퓨터에 연동된 로컬 저장소 선택 후 추가

2. Sourcetree menu
 History: 해당 Repo에서 진행된 commit 사항에 대해 확인 가능
    > git commit -m "~~" 내용의 확인 가능
    > 커밋 수행자 확인 가능
    > 커밋 수행 시 진행된 코드 확인 가능

+ $ Git init 을 사용해 Git 로컬 저장소를 만들고 $ git remote 를 통해 지정한 Repo가 .git 폴더에 저장
+ .git 폴더에는 작업이 진행된 부분의 위치 저장

<VScode를 사용한 Create Code & Sourcetree commit>
1. 탐색기를 통해 Git 연동 파일 선택

2. 파일 생성 - VScode에서 새로 만든 파일은 기본적으로 .md 확장자로 저장
 - .md 확장자는 Markdown 문서의 확장명

3. Markdown 문서는 #을 사용해 제목으로 설정 가능

4. 문서 저장

5. Sourcetree에서 스테이지에 올라가지 않은 파일 섹션에는 새로 생성한 파일의 확인이 가능
 - History 메뉴에서는 커밋이 진행되지 않은 파일이 있을 경우 "커밋하지 않은 변경사항"이 표시됨

6. 좌측 상단의 커밋 메뉴 클릭

7. WORKSPACE의 파일 상태 메뉴로 화면이 전환
 - 스테이지에 올라가지 않은 파일 섹션에서 파일마다 + 버튼을 클릭하여 각각 $ git add 가능
 - 모두 스테이지에 올리기 버튼을 클릭하여 $ git add --all 가능
 - add 할 파일을 선택하면 파일의 내용 확인 가능

8. 파일의 add 이후 하단에 내용 입력 = $ git commit -m "~~"
 - 스테이지에 파일이 올라가야 설명의 입력이 가능
9. 커밋이 완료되면 파일 상태에는 변경 사항이 없기에 파일 확인 불가

10. History에서는 커밋된 내용이 현재 어디에 위치하는지 확인 가능
 - $ git push origin <Repo>가 실행되지 않았다면 로컬저장소 표시 확인 가능
 - $ git remote add <원격 저장소 이름> <Github 주소> -> 예시로 사용한 origin은 해당 저장소가 원격 저장소, Github에 존재한다는 것을 알려줌

11. 로컬 저장소에서 커밋만 되어있는 파일을 Push 메뉴를 사용하여 원격 저장소로 업로드 진행