<To fork master>
- 원본 저장소 복사 후 새로운 원격 저장소 생성
 1. 기본적으로 원본 저장소에 커밋을 직접 push할 수 있는 사용자는 원본 저장소를 만든 소유자 뿐
 2. 소유자 이외의 인원이 push하기 위해서는 협력자로 등록하는 절차 필요
    > 등록되지 않은 사용자가 push하면 오류 발생
        + 협력자 등록: Github -> Settings -> Collaborators -> Add people
        + 협력자 등록을 위해서는 해당 사용자가 Github 계정을 사용 중이어야 가능
        + 협력자 초대 시 해당 사용자의 이메일로 초대 메일 발송
        + 협력자가 초대 수락 후 해당 사용자에게 권한 부여 완료
 3. 원본 저장소에 많은 사용자가 사용 시 소유자의 관리 어려움 발생
    > 협력자가 직접 원본 저장소에 push 할 수 있기 때문
        + 대안: pull request
        + 방법
          원본 저장소의 fork 진행
          fork 저장소에서 협력자의 작업 진행
          작업 진행 후 협력자는 원본 저장소 소유자에게 pull request
          소유자는 해당 작업 확인 후 원본 저장소에 merge 진행
    > fork 저장소의 branch에서 원본 저장소의 branch로 pull request
 4. fork 저장소는 원본 저장소의 branch를 포함한 모든 commit 이력을 복사
    > fork 저장소에서의 commit 이력을 확인하기 위해서는 해당 저장소의 주소를 등록

- Branch VS. Fork
 | 유형   | 의의                                  | 편리한 점                                                               | 불편한 점                                            |
|--------|---------------------------------------|-------------------------------------------------------------------------|------------------------------------------------------|
| branch | 하나의 원본 저장소에서 분기를 나눔    | 하나의 원본저장소에서 코드 커밋 이력을 편하게 볼 수 있음                | 다수의 사용자가 다수의 브랜치를 만들면 관리가 어려움 |
| Fork   | 여러 원격 저장소를 만들어 분기를 나눔 | 원본 저장소에 영향을 미치지 않아  원격 저장소에서 편하게 코드 수정 가능 | 원본 저장소의 이력 확인을 위해 따로 주소 등록 필요   |
|        |                                       |                                                                         |                                                      |
- 외부 사용자의 저장소 fork
 1. 외부 사용자로 사용할 계정 생성
 2. 